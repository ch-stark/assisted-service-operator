apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.3.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: assisted-service-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions: {}
  description: Assisted Service description
  displayName: Assisted Service
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      deployments:
      - label:
          app.kubernetes.io/component: deployment
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/part-of: assisted-service
          app.kubernetes.io/version: 0.0.1
          name: postgres
        name: postgres
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: postgres
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app.kubernetes.io/component: deployment
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/part-of: assisted-service
                app.kubernetes.io/version: 0.0.1
                name: postgres
            spec:
              containers:
              - env:
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef: {key: db.name, name: assisted-installer-rds}
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef: {key: db.user, name: assisted-installer-rds}
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef: {key: db.password, name: assisted-installer-rds}
                image: quay.io/ocpmetal/postgresql-12-centos7
                imagePullPolicy: IfNotPresent
                name: postgres
                ports:
                - {containerPort: 5432}
                resources:
                  limits: {cpu: 200m, memory: 500Mi}
                  requests: {cpu: 100m, memory: 400Mi}
                volumeMounts:
                - {mountPath: /var/lib/postgress, name: postgredb}
              volumes:
              - name: postgredb
                persistentVolumeClaim: {claimName: postgres-pv-claim}
      - label:
          app.kubernetes.io/component: deployment
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/part-of: assisted-service
          app.kubernetes.io/version: 0.0.1
          name: scality
        name: scality
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: scality
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app.kubernetes.io/component: deployment
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/part-of: assisted-service
                app.kubernetes.io/version: 0.0.1
                name: scality
            spec:
              containers:
              - env:
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: aws_secret_access_key
                      name: assisted-installer-s3
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      key: aws_access_key_id
                      name: assisted-installer-s3
                - name: AWS_REGION
                  valueFrom:
                    secretKeyRef:
                      key: aws_region
                      name: assisted-installer-s3
                - name: BUCKET
                  valueFrom:
                    secretKeyRef:
                      key: bucket
                      name: assisted-installer-s3
                - name: S3_ENDPOINT_URL
                  valueFrom:
                    secretKeyRef:
                      key: endpoint
                      name: assisted-installer-s3
                - name: S3DATAPATH
                  valueFrom:
                    secretKeyRef:
                      key: s3_data_path
                      name: assisted-installer-s3
                - name: S3METADATAPATH
                  valueFrom:
                    secretKeyRef:
                      key: s3_metadata_path
                      name: assisted-installer-s3
                image: quay.io/ocpmetal/s3server
                imagePullPolicy: Always
                name: s3server
                resources:
                  limits:
                    cpu: 500m
                    memory: 2000Mi
                  requests:
                    cpu: 300m
                    memory: 2000Mi
                volumeMounts:
                - mountPath: /mnt/data
                  name: scalityvol
              volumes:
              - name: scalityvol
                persistentVolumeClaim:
                  claimName: scality-pv-claim
      - label:
          app.kubernetes.io/component: deployment
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/part-of: assisted-service
          app.kubernetes.io/version: 0.0.1
          name: ocp-metal-ui
        name: ocp-metal-ui
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: ocp-metal-ui
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app.kubernetes.io/component: deployment
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/part-of: assisted-service
                app.kubernetes.io/version: 0.0.1
                name: ocp-metal-ui
            spec:
              containers:
                - name: ocp-metal-ui
                  image: quay.io/ocpmetal/ocp-metal-ui:latest
                  imagePullPolicy: Always
                  ports:
                    - containerPort: 80
                  volumeMounts:
                    - mountPath: /opt/bitnami/nginx/conf/server_blocks/
                      readOnly: true
                      name: nginx-conf
              volumes:
                - name: nginx-conf
                  configMap:
                    name: ocp-metal-ui
                    items:
                      - key: nginx.conf
                        path: default.conf
              restartPolicy: Always
      - label:
          app.kubernetes.io/component: deployment
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/part-of: assisted-service
          app.kubernetes.io/version: 0.0.1
          name: assisted-service
        name: assisted-service
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: assisted-service
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app.kubernetes.io/component: deployment
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/part-of: assisted-service
                app.kubernetes.io/version: 0.0.1
                name: assisted-service
            spec:
              containers:
              - env:
                - name: DB_HOST
                  valueFrom:
                    secretKeyRef:
                      key: db.host
                      name: assisted-installer-rds
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      key: db.name
                      name: assisted-installer-rds
                - name: DB_PASS
                  valueFrom:
                    secretKeyRef:
                      key: db.password
                      name: assisted-installer-rds
                - name: DB_PORT
                  valueFrom:
                    secretKeyRef:
                      key: db.port
                      name: assisted-installer-rds
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      key: db.user
                      name: assisted-installer-rds
                - name: OCM_SERVICE_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: ocm-service.clientId
                      name: assisted-installer-sso
                - name: OCM_SERVICE_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: ocm-service.clientSecret
                      name: assisted-installer-sso
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: aws_secret_access_key
                      name: assisted-installer-s3
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      key: aws_access_key_id
                      name: assisted-installer-s3
                - name: S3_REGION
                  valueFrom:
                    secretKeyRef:
                      key: aws_region
                      name: assisted-installer-s3
                - name: S3_BUCKET
                  valueFrom:
                    secretKeyRef:
                      key: bucket
                      name: assisted-installer-s3
                - name: S3_ENDPOINT_URL
                  valueFrom:
                    secretKeyRef:
                      key: endpoint
                      name: assisted-installer-s3
                - name: S3_USE_SSL
                  value: 'false'
                - name: LOG_LEVEL
                  value: info
                - name: LOG_FORMAT
                  value: text
                - name: INSTALL_RH_CA
                  value: 'false'
                - name: REGISTRY_CREDS
                  value: ''
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: AWS_SHARED_CREDENTIALS_FILE
                  value: /etc/.aws/credentials
                - name: DEPLOY_TARGET
                  value: ocp
                envFrom:
                - configMapRef:
                    name: assisted-service-config
                image: quay.io/ocpmetal/assisted-service:latest
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /health
                    port: 8090
                  initialDelaySeconds: 30
                name: assisted-service
                ports:
                - containerPort: 8090
                readinessProbe:
                  httpGet:
                    path: /ready
                    port: 8090
                resources:
                  limits:
                    cpu: 500m
                    memory: 2000Mi
                  requests:
                    cpu: 300m
                    memory: 400Mi
                volumeMounts:
                - mountPath: /etc/.aws
                  name: route53-creds
                  readOnly: true
                - mountPath: /data
                  name: iso
              initContainers:
              - args:
                - cp -r /data/* /iso-data
                command:
                - bash
                - -c
                image: quay.io/ocpmetal/assisted-iso-create:latest
                name: assisted-iso-create
                volumeMounts:
                - mountPath: /iso-data
                  name: iso
              volumes:
              - name: route53-creds
                secret:
                  optional: true
                  secretName: route53-creds
              - emptyDir: {}
                name: iso
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - assisted-service
  links:
  - name: Assisted Service Operator
    url: https://assisted-service-operator.domain
  maturity: alpha
  provider:
    name: PROVIDER_NAME
    url: URL
  version: 0.0.1
